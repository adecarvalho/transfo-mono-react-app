{"ast":null,"code":"import _objectSpread from \"/Users/adc/work_react/transfo-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SET_MODELE_KAPP, SET_NEW_REGLAGE } from './types';\nvar initState = {\n  modeleKapp: {},\n  reglages: {},\n  mesures: {}\n};\n\nvar process = function process(kapp, reglage) {\n  console.log(kapp);\n  console.log(reglage);\n  var u1 = Number(reglage.u1eff);\n  var module = Number(reglage.module);\n  var phase = Number(reglage.phase * Math.PI / 180);\n  var m = Number(kapp.rapport_m);\n  var rp = Number(kapp.resistance_rp);\n  var lp = Number(kapp.inducatnce_lp);\n  var rs = Number(kapp.resistance_rs);\n  var xs = Number(kapp.reactance_xs);\n  var reel = rs + module * Math.cos(phase);\n  var img = xs + module * Math.sin(phase);\n  var div = Math.sqrt(reel * reel + img * img);\n  var i2 = m * u1 / div;\n  var u2 = module * i2;\n  var p2 = u2 * i2 * Math.cos(phase);\n  var pertes = rs * i2 * i2 + u1 * u1 / rp;\n  var p1 = p2 + pertes;\n  var rendement = 100 * p2 / p1 || 0;\n  var q2 = u2 * i2 * Math.sin(phase);\n  var q1 = q2 + u1 * u1 / (314 * lp) + xs * i2 * i2;\n  var s1 = Math.sqrt(p1 * p1 + q1 * q1);\n  var i1 = s1 / u1 || 0;\n  console.log('I1eff= ' + i1);\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //\n    case SET_MODELE_KAPP:\n      {\n        process(action.payload, state.reglages);\n        return _objectSpread({}, state, {\n          modeleKapp: _objectSpread({}, action.payload)\n        });\n      }\n    //\n\n    case SET_NEW_REGLAGE:\n      {\n        process(state.modeleKapp, action.payload); //\n\n        return _objectSpread({}, state, {\n          reglages: _objectSpread({}, action.payload)\n        });\n      }\n    //\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/adc/work_react/transfo-react-app/src/store/rootReducer.js"],"names":["SET_MODELE_KAPP","SET_NEW_REGLAGE","initState","modeleKapp","reglages","mesures","process","kapp","reglage","console","log","u1","Number","u1eff","module","phase","Math","PI","m","rapport_m","rp","resistance_rp","lp","inducatnce_lp","rs","resistance_rs","xs","reactance_xs","reel","cos","img","sin","div","sqrt","i2","u2","p2","pertes","p1","rendement","q2","q1","s1","i1","rootReducer","state","action","type","payload"],"mappings":"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","sourcesContent":["import { SET_MODELE_KAPP, SET_NEW_REGLAGE } from './types'\n\nconst initState = {\n\tmodeleKapp: {},\n\treglages: {},\n\tmesures: {}\n}\n\nconst process = (kapp, reglage) => {\n\tconsole.log(kapp)\n\tconsole.log(reglage)\n\tconst u1 = Number(reglage.u1eff)\n\tconst module = Number(reglage.module)\n\tconst phase = Number((reglage.phase * Math.PI) / 180)\n\n\tconst m = Number(kapp.rapport_m)\n\tconst rp = Number(kapp.resistance_rp)\n\tconst lp = Number(kapp.inducatnce_lp)\n\tconst rs = Number(kapp.resistance_rs)\n\tconst xs = Number(kapp.reactance_xs)\n\n\tconst reel = rs + module * Math.cos(phase)\n\tconst img = xs + module * Math.sin(phase)\n\tconst div = Math.sqrt(reel * reel + img * img)\n\n\tconst i2 = (m * u1) / div\n\tconst u2 = module * i2\n\tconst p2 = u2 * i2 * Math.cos(phase)\n\n\tconst pertes = rs * i2 * i2 + (u1 * u1) / rp\n\tconst p1 = p2 + pertes\n\n\tconst rendement = (100 * p2) / p1 || 0\n\n\tconst q2 = u2 * i2 * Math.sin(phase)\n\tconst q1 = q2 + (u1 * u1) / (314 * lp) + xs * i2 * i2\n\tconst s1 = Math.sqrt(p1 * p1 + q1 * q1)\n\tconst i1 = s1 / u1 || 0\n\n\tconsole.log('I1eff= ' + i1)\n}\n\nconst rootReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\t//\n\t\tcase SET_MODELE_KAPP: {\n\t\t\tprocess(action.payload, state.reglages)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmodeleKapp: { ...action.payload }\n\t\t\t}\n\t\t}\n\t\t//\n\t\tcase SET_NEW_REGLAGE: {\n\t\t\tprocess(state.modeleKapp, action.payload)\n\t\t\t//\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\treglages: { ...action.payload }\n\t\t\t}\n\t\t}\n\t\t//\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}