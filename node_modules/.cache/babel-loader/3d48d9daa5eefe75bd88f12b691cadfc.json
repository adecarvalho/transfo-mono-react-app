{"ast":null,"code":"import _objectSpread from \"/Users/adc/work_react/transfo-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SET_MODELE_KAPP, SET_NEW_REGLAGE } from './types';\nvar initState = {\n  modeleKapp: {},\n  reglages: {\n    u1eff: '0',\n    module: '10',\n    phase: '0'\n  },\n  mesures: {}\n};\n\nvar process = function process(kapp, reglage) {\n  if (kapp && reglage) {\n    var res = {};\n    var u1 = Number(reglage.u1eff);\n    var module = Number(reglage.module);\n    var phase = Number(reglage.phase * Math.PI / 180);\n    var m = Number(kapp.rapport_m);\n    var rp = Number(kapp.resistance_rp);\n    var lp = Number(kapp.inductance_lp);\n    var rs = Number(kapp.resistance_rs);\n    var xs = Number(kapp.reactance_xs);\n    var reel = rs + module * Math.cos(phase);\n    var img = xs + module * Math.sin(phase);\n    var div = Math.sqrt(reel * reel + img * img);\n    var i2 = m * u1 / div || 0;\n    var u2 = module * i2 || 0;\n    var p2 = u2 * i2 * Math.cos(phase) || 0;\n    var pertes = rs * i2 * i2 + u1 * u1 / rp || 0;\n    var p1 = p2 + pertes || 0;\n    var rendement = 100 * p2 / p1 || 0;\n    var q2 = u2 * i2 * Math.sin(phase);\n    var q1 = q2 + u1 * u1 / (314 * lp) + xs * i2 * i2;\n    var s1 = Math.sqrt(p1 * p1 + q1 * q1);\n    var i1 = s1 / u1 || 0; //\n\n    res.i1eff = Math.round(i1).toFixed(2);\n    res.i2eff = Math.round(i2).toFixed(2);\n    res.u2eff = Math.round(u2).toFixed(0);\n    res.p1 = Math.round(p1).toFixed(0);\n    res.p2 = Math.round(p2).toFixed(0);\n    res.rendement = math.round(rendement).toFixed(0);\n    return res; //console.log(res)\n  }\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //\n    case SET_MODELE_KAPP:\n      {\n        var res = process(action.payload, state.reglages);\n        return _objectSpread({}, state, {\n          modeleKapp: _objectSpread({}, action.payload),\n          mesures: _objectSpread({}, res)\n        });\n      }\n    //\n\n    case SET_NEW_REGLAGE:\n      {\n        var _res = process(state.modeleKapp, action.payload); //\n\n\n        return _objectSpread({}, state, {\n          reglages: _objectSpread({}, action.payload),\n          mesures: _objectSpread({}, _res)\n        });\n      }\n    //\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/adc/work_react/transfo-react-app/src/store/rootReducer.js"],"names":["SET_MODELE_KAPP","SET_NEW_REGLAGE","initState","modeleKapp","reglages","u1eff","module","phase","mesures","process","kapp","reglage","res","u1","Number","Math","PI","m","rapport_m","rp","resistance_rp","lp","inductance_lp","rs","resistance_rs","xs","reactance_xs","reel","cos","img","sin","div","sqrt","i2","u2","p2","pertes","p1","rendement","q2","q1","s1","i1","i1eff","round","toFixed","i2eff","u2eff","math","rootReducer","state","action","type","payload"],"mappings":"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","sourcesContent":["import { SET_MODELE_KAPP, SET_NEW_REGLAGE } from './types'\n\nconst initState = {\n\tmodeleKapp: {},\n\treglages: { u1eff: '0', module: '10', phase: '0' },\n\tmesures: {}\n}\n\nconst process = (kapp, reglage) => {\n\tif (kapp && reglage) {\n\t\tconst res = {}\n\n\t\tconst u1 = Number(reglage.u1eff)\n\t\tconst module = Number(reglage.module)\n\t\tconst phase = Number((reglage.phase * Math.PI) / 180)\n\n\t\tconst m = Number(kapp.rapport_m)\n\t\tconst rp = Number(kapp.resistance_rp)\n\t\tconst lp = Number(kapp.inductance_lp)\n\t\tconst rs = Number(kapp.resistance_rs)\n\t\tconst xs = Number(kapp.reactance_xs)\n\n\t\tconst reel = rs + module * Math.cos(phase)\n\t\tconst img = xs + module * Math.sin(phase)\n\t\tconst div = Math.sqrt(reel * reel + img * img)\n\n\t\tconst i2 = (m * u1) / div || 0\n\t\tconst u2 = module * i2 || 0\n\t\tconst p2 = u2 * i2 * Math.cos(phase) || 0\n\n\t\tconst pertes = rs * i2 * i2 + (u1 * u1) / rp || 0\n\t\tconst p1 = p2 + pertes || 0\n\n\t\tconst rendement = (100 * p2) / p1 || 0\n\n\t\tconst q2 = u2 * i2 * Math.sin(phase)\n\t\tconst q1 = q2 + (u1 * u1) / (314 * lp) + xs * i2 * i2\n\t\tconst s1 = Math.sqrt(p1 * p1 + q1 * q1)\n\t\tconst i1 = s1 / u1 || 0\n\n\t\t//\n\t\tres.i1eff = Math.round(i1).toFixed(2)\n\t\tres.i2eff = Math.round(i2).toFixed(2)\n\t\tres.u2eff = Math.round(u2).toFixed(0)\n\t\tres.p1 = Math.round(p1).toFixed(0)\n\t\tres.p2 = Math.round(p2).toFixed(0)\n\t\tres.rendement = math.round(rendement).toFixed(0)\n\n\t\treturn res\n\t\t//console.log(res)\n\t}\n}\n\nconst rootReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\t//\n\t\tcase SET_MODELE_KAPP: {\n\t\t\tconst res = process(action.payload, state.reglages)\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmodeleKapp: { ...action.payload },\n\t\t\t\tmesures: { ...res }\n\t\t\t}\n\t\t}\n\t\t//\n\t\tcase SET_NEW_REGLAGE: {\n\t\t\tconst res = process(state.modeleKapp, action.payload)\n\t\t\t//\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\treglages: { ...action.payload },\n\t\t\t\tmesures: { ...res }\n\t\t\t}\n\t\t}\n\t\t//\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}