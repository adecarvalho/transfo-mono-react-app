{"ast":null,"code":"import _objectSpread from \"/Users/adc/work_react/transfo-react-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SET_MODELE_KAPP, SET_NEW_REGLAGE } from './types';\nvar initState = {\n  modeleKapp: {},\n  reglages: {},\n  mesures: {}\n};\n\nvar process = function process(kapp, reglage) {\n  console.log(kapp);\n  console.log(reglage);\n  var u1 = Number(reglage.u1eff);\n  var module = Number(reglage.module);\n  var phase = NUmber(reglage.phase * Math.PI / 180);\n};\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //\n    case SET_MODELE_KAPP:\n      {\n        process(action.payload, state.reglages);\n        return _objectSpread({}, state, {\n          modeleKapp: _objectSpread({}, action.payload)\n        });\n      }\n    //\n\n    case SET_NEW_REGLAGE:\n      {\n        process(state.modeleKapp, action.payload); //\n\n        return _objectSpread({}, state, {\n          reglages: _objectSpread({}, action.payload)\n        });\n      }\n    //\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/adc/work_react/transfo-react-app/src/store/rootReducer.js"],"names":["SET_MODELE_KAPP","SET_NEW_REGLAGE","initState","modeleKapp","reglages","mesures","process","kapp","reglage","console","log","u1","Number","u1eff","module","phase","NUmber","Math","PI","rootReducer","state","action","type","payload"],"mappings":";AAAA,SAASA,eAAT,EAA0BC,eAA1B,QAAiD,SAAjD;AAEA,IAAMC,SAAS,GAAG;AACjBC,EAAAA,UAAU,EAAE,EADK;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAAlB;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOC,OAAP,EAAmB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,MAAMG,EAAE,GAAGC,MAAM,CAACJ,OAAO,CAACK,KAAT,CAAjB;AACA,MAAMC,MAAM,GAAGF,MAAM,CAACJ,OAAO,CAACM,MAAT,CAArB;AACA,MAAMC,KAAK,GAAGC,MAAM,CAAER,OAAO,CAACO,KAAR,GAAgBE,IAAI,CAACC,EAAtB,GAA4B,GAA7B,CAApB;AACA,CAND;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBlB,SAAsB;AAAA,MAAXmB,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACC;AACA,SAAKtB,eAAL;AAAsB;AACrBM,QAAAA,OAAO,CAACe,MAAM,CAACE,OAAR,EAAiBH,KAAK,CAAChB,QAAvB,CAAP;AACA,iCACIgB,KADJ;AAECjB,UAAAA,UAAU,oBAAOkB,MAAM,CAACE,OAAd;AAFX;AAIA;AACD;;AACA,SAAKtB,eAAL;AAAsB;AACrBK,QAAAA,OAAO,CAACc,KAAK,CAACjB,UAAP,EAAmBkB,MAAM,CAACE,OAA1B,CAAP,CADqB,CAErB;;AACA,iCACIH,KADJ;AAEChB,UAAAA,QAAQ,oBAAOiB,MAAM,CAACE,OAAd;AAFT;AAIA;AACD;;AACA;AACC,aAAOH,KAAP;AApBF;AAsBA,CAvBD;;AAyBA,eAAeD,WAAf","sourcesContent":["import { SET_MODELE_KAPP, SET_NEW_REGLAGE } from './types'\n\nconst initState = {\n\tmodeleKapp: {},\n\treglages: {},\n\tmesures: {}\n}\n\nconst process = (kapp, reglage) => {\n\tconsole.log(kapp)\n\tconsole.log(reglage)\n\tconst u1 = Number(reglage.u1eff)\n\tconst module = Number(reglage.module)\n\tconst phase = NUmber((reglage.phase * Math.PI) / 180)\n}\n\nconst rootReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\t//\n\t\tcase SET_MODELE_KAPP: {\n\t\t\tprocess(action.payload, state.reglages)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmodeleKapp: { ...action.payload }\n\t\t\t}\n\t\t}\n\t\t//\n\t\tcase SET_NEW_REGLAGE: {\n\t\t\tprocess(state.modeleKapp, action.payload)\n\t\t\t//\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\treglages: { ...action.payload }\n\t\t\t}\n\t\t}\n\t\t//\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default rootReducer\n"]},"metadata":{},"sourceType":"module"}